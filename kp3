// 12 вариант 
#include <stdio.h>
#include <math.h>

#define RANGE_BEGIN 0.0l
#define RANGE_END 1.0l
#define STEP 0.005l

const long double ln3 = logl(3);

long double MachineEps() {
    long double e = 1.0l;
    while (1.0l + e * 0.5l > 1.0l) {
        e *= 0.5l;
    }
    return e;
}

long double Abs(long double a) {
    return a >= 0 ? a : -a;
}

long double F(long double x){
    return powl(3, x);
}

int main() {
    long double eps = MachineEps();
    for (int i = 0; i < 76; i++) {
        printf("-");
    }
    printf("\n");

    printf("| x");
    for (int i = 2; i < 7; i++) {
        printf(" ");
    }
    printf("| част. сумма ряда");
    for (int i = 17; i < 24; i++) {
        printf(" ");
    }
    printf("| значение функции");
    for (int i = 17; i < 24; i++) {
        printf(" ");
    }
    printf("| число итераций |\n");

    for (int i = 0; i < 76; i++) {
        printf("-");
    }
    printf("\n");
 
   for (long double x = RANGE_BEGIN; x <= RANGE_END; x += STEP) {
       
        int n = 1;
        long double sum = 0.0l, an = 1l;
        long double fX = F(x);
        long double ln3_n = 1l;
        long double xn = 1;
        double factorialN = 1.0;
        
        for (; n <= 100 && Abs(an) > eps; ++n) {
            
            sum += an;
            factorialN *= (double)(n);
            ln3_n *= ln3;
            xn *= x;
            an = (ln3_n / factorialN) * xn;
        }
        
        printf("| %.3Lf | %.20Lf | %.20Lf | %d", x, sum, fX, n);
        double lengthOfN = n > 0 ? log10(n) : 1;
        for (int i = lengthOfN; i < 14; i++) {
            printf(" ");
        }
        printf("|\n");
   }
    for (int i = 0; i < 76; i++) {
        printf("-");
    }
    printf("\n");
    return 0;
}
